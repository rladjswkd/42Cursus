flag, width, precision간의 순서가 달라져도 출력은 정상 순서로 입력됐을 때와 동일하게 출력된다.

단, 순서가 다르더라도 format specifier보단 앞에 나와야 한다.

%기호가 나오면 문자열을 검사하기 시작.

flag가 나오면 flag를 처리하는 함수를 호출.

10진 숫자가 나오면 width를 처리하는 함수를 호출.

.이 나오면 precision을 처리하는 함수를 호출.

어떻게 처리?

conversion speciviation에 대한 정보를 들고 있을 오브젝트가 필요. => converted value를 출력할 때, 해당 오브젝트를 검사해, 출력 양식에 따라 출력.

if문을 사용하면 쉽게 구현할 수 있지만, if문을 사용하지 않고 구현하는 방법 고민해보기. -> bit masking

각 flag와 field width, precision이 conversion specification에 포함돼있으면 1, 그렇지 않으면 0을 이용하고 시프트 연산자를 이용해 비트 마스킹을 하면 if문을 사용하지 않고 구한 값을
인덱스는 함수 포인터 배열을 만들면 된다. -> 단, if문을 쓰는 거에 비해 효율적인지는 모르겠다.
